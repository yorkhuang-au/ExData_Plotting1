source('~/sales.R')
a<-calcSales("sales.csv")
a
a[1,1]
a[1,2]
a[[1,2]]
length(a[[1,2]])
a<-calcSales("sales.csv")
a[1,2]
class(a[1,2])
source('~/sales.R')
calcSales("sales.csv")
a<-calcSales("sales.csv")
a
a[[1]]
class(a[[1]])
a
b<a[[1]]
b<-a[[1]]
class(b)
b
combn(b,2)
v<-combn(b,2)
v[1,1]
v[1,2]
v[1,3]
combn(1:nrow(v),2)
combn(1:nrow(b),2)
data
a
b
?combn
b
combn(b,2)
split(b, b["prod"])
split(b, b["prod"])
?split
combn(split(b, b["prod"]),2)
v<-combn(split(b, b["prod"]),2)
v[1,1]
v[2,1]
data
b
pg<-split(b,b["prod"])
pg
pg[1]
pg[1]$prod
rowname(pg[1])
rname
rowName
rowNames
class(pg)
?split
pg[[1]]
pg[1]
pg[1].name
row.name
?rpart
?rpart.object
library("plyr")
install.packages("plyr")
library("plyr")
?ddply
pg
b
rbind(c(1, grape,5), b)
rbind(c(1, "grape,5), b)
)
rbind(c(1, "grape",5), b)
b<-rbind(c(1, "grape",5), b)
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 15), rep('C', 6)),
sex = sample(c("M", "F"), size = 29, replace = TRUE),
age = runif(n = 29, min = 18, max = 54)
)
dfx
b
ddply(b, .(prod), sum)
ddply(b, .(prod), amount1=sum(amount))
split(b, b["prod"])
ddply(b, .(prod), amount1=sum(amount))
ddply(b, .(seq, prod), amount1=sum(amount))
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
ddply(b, .(seq, prod), sum, amount)
ddply(b, .(seq, prod), sum, a=amount)
b
ddply(b, .(seq, prod), nrow)
ddply(b, .(seq, prod), function(r) sum(r["amount"]))
ddply(b, .(seq, prod), function(r) r["amount"] )
ddply(b, .(seq, prod), function(r) r["amount"] )
?summary
summary(list(1,2))
summary(c(1,2))
sum(c(1,2))
ddply(b, .(seq, prod), summary, s=sum(amount) )
ddply(b, .(prod), summary, s=sum(amount) )
b
ddply(b, .(prod), summary, s=sum(amount) )
?ddply
ddply(b, .(prod), summary, s=sum(amount) )
dfx
class(dfx)
class(b)
?summarize
ddply(b, .(prod), summarize, s=sum(amount) )
?summarize
ddply(b, "prod", summarise, s=sum(amount) )
ddply(b, "prod", summarise, sa=sum(amount) )
ddply(b, .(seq, prod), summarise, sa=sum(amount) )
b
b[1,3]
ddply(b, .(prod), summarise, sa=sum(as.integer(amount)) )
?require
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
?summarize
source('~/sales.R')
calcSales("sales.csv")
a<-calcSales("sales.csv")
ddply(a,.(seq))
ddply(a,.(seq), summarize, nrow)
ddply(a,.(seq), summarize, length)
ddply(a,.(seq), summarize, ll=length)
ddply(a,.(seq), summarize, ll=nrow)
ddply(a,.(seq), summarize, ll=nrow())
aggregate(data$age, by=list(data$group), FUN=mean)
s<-read.csv("sales.csv")
s
aggregate(s$amount, by=list(s$seq, s$prod), FUN=sum)
aggregate(amount-s$amount, by=list(seq=s$seq, prod=s$prod), FUN=sum)
aggregate(amount=s$amount, by=list(seq=s$seq, prod=s$prod), FUN=sum)
aggregate(s$amount, by=list(seq=s$seq, prod=s$prod), FUN=sum)
?aggregate
aggregate.data.frame(s$amount, by=list(seq=s$seq, prod=s$prod), FUN=sum)
aggregate.data.frame(x="amount", data=s, by=list(seq=s$seq, prod=s$prod), FUN=sum)
aggregate.data.frame(x=s, by=list(seq=s$seq, prod=s$prod), FUN=sum)
aggregate(x=s, by=list(seq=s$seq, prod=s$prod), FUN=sum)
testDF <- data.frame(v1 = c(1,3,5,7,8,3,5,NA,4,5,7,9),
v2 = c(11,33,55,77,88,33,55,NA,44,55,77,99) )
by1 <- c("red", "blue", 1, 2, NA, "big", 1, 2, "red", 1, NA, 12)
by2 <- c("wet", "dry", 99, 95, NA, "damp", 95, 99, "red", 99, NA, NA)
aggregate(x = testDF, by = list(by1, by2), FUN = "mean")
testDF
by1
by2
aggregate(x=s[,"amont"], by=list(seq=s$seq, prod=s$prod), FUN=sum)
s
s[,"amount"]
aggregate(x=s[,"amont"], by=list( prod=s$prod), FUN=sum)
aggregate(x=s[,"amount"], by=list(seq=s$seq, prod=s$prod), FUN=sum)
testDF
s[,"amount"]
s
testDF[,"v1"]
aggregate(x=s, by=list(seq=s$seq, prod=s$prod), FUN=sum)
aggregate(x=s$amount, by=list(seq=s$seq, prod=s$prod), FUN=sum)
a<-aggregate(x=s$amount, by=list(seq=s$seq, prod=s$prod), FUN=sum)
a
colNames
colname
cols
col
names
names(a)
names(a)<- c("seq", "prod","amount")
a
aggregate(s$amount, by=list(seq=s$seq, prod=s$prod), FUN=sum)
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
?unsplit
a<-calcSales("sales.csv")
b <- list(a,a)
b
unsplit(b)
a
b<-split(a,a$seq)
b
unsplit(b, b$seq)
unsplit(b, a$seq)
data.frame( prod=c("apple","peach"), amount=c(3,5))
source('~/sales.R')
calcSales("sales.csv")
a<-calcSales("sales.csv")
a
b
c
d2
v
a
class(a)
rownames
rownames(a)
class(a)
a
colnames
colnames(a)
dim(a)
a
unlist(a)
unlist(a)
do.call(rbind,a)
source('~/sales.R')
calcSales("sales.csv")
a
a<-calcSales("sales.csv")
a
source('~/sales.R')
a<-calcSales("sales.csv")
a
a<-a[1:3,]
a
combn(a,2)
?split
split(a[,2:3], a["prod"])
combn(split(a[,2:3], a["prod"]),2)
c<-combn(split(a[,2:3], a["prod"]),2)
c[1,1]
c[2,1]
c
lapply(1:ncol(c), function(x) list(prod1=c[[1,1]]["prod"]))
lapply(1:ncol(c), function(x) list(prod1=c[[1,1]][["prod"]]))
lapply(1:ncol(c), function(x) list(prod1=c[[1,x]][["prod"]]))
lapply(1:ncol(c), function(x) list(prod1=c[[1,x]][["prod"]], prod2=c[[2,x]][["prod"]]))
lapply(1:ncol(c), function(x) list(prod1=c[[1,x]][["prod"]], prod2=c[[2,x]][["prod"]], amount= c[[1,x]][["amount"]] * c[[2,x]][["amount"]]))
sapply(1:ncol(c), function(x) list(prod1=c[[1,x]][["prod"]], prod2=c[[2,x]][["prod"]], amount= c[[1,x]][["amount"]] * c[[2,x]][["amount"]]))
t(sapply(1:ncol(c), function(x) list(prod1=c[[1,x]][["prod"]], prod2=c[[2,x]][["prod"]], amount= c[[1,x]][["amount"]] * c[[2,x]][["amount"]])))
class(t(sapply(1:ncol(c), function(x) list(prod1=c[[1,x]][["prod"]], prod2=c[[2,x]][["prod"]], amount= c[[1,x]][["amount"]] * c[[2,x]][["amount"]]))))
sapply(1:ncol(c), function(x) list(prod1=c[[1,x]][["prod"]], prod2=c[[2,x]][["prod"]], amount= c[[1,x]][["amount"]] * c[[2,x]][["amount"]]))
class(sapply(1:ncol(c), function(x) list(prod1=c[[1,x]][["prod"]], prod2=c[[2,x]][["prod"]], amount= c[[1,x]][["amount"]] * c[[2,x]][["amount"]])))
lapply(1:ncol(c), function(x) list(prod1=c[[1,x]][["prod"]], prod2=c[[2,x]][["prod"]], amount= c[[1,x]][["amount"]] * c[[2,x]][["amount"]]))
source('~/sales.R')
source('~/sales.R')
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
?min
min("a","b")
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
source('~/sales.R')
calcSales("sales.csv")
a<-calcSales("sales.csv")
class(a)
source('~/sales.R')
a<-calcSales("sales.csv")
class(a)
a
ddply(a, .(prod1,prod2), summarise, amount=sum(amount))
source('~/sales.R')
a<-calcSales("sales.csv")
a
?sort
a
order(a$prod1, decreasing=TRUE)
order(a$amount, decreasing=TRUE)
a[order(a$amount, decreasing=TRUE)]
class(a[order(a$amount, decreasing=TRUE)])
order(a$amount, decreasing=TRUE)
a
a[3,2,1]
a[c(3,2,1),]
a[c(3,2,1)]
source('~/sales.R')
a<-calcSales("sales.csv")
a
rm(list=ls())
source('~/sales.R')
calcSales('sales.csv')
source('~/sales.R')
calcSales('sales.csv')
source('~/sales.R')
calcSales('sales.csv')
a<- list(1,2)
list(a,3)
rbind.list
rbind(a,3)
cbind(a,3)
c(a,3)
sort.list(a)
sort.list(x=a[1])
sort.list(x=a[[1]])
a
sort(c(1,2,3,-1))
c( c(1,2,3), list("a"))
class(c( c(1,2,3), list("a")))
?names
source('~/sales.R')
calcSales('sales.csv')
source('~/sales.R')
calcSales('sales.csv')
rm(list=ls())
source('~/sales.R')
calcSales('sales.csv')
source('~/sales.R')
calcSales('sales.csv')
source('~/sales.R')
calcSales('sales.csv')
source('~/sales.R')
calcSales('sales.csv')
source('~/sales.R')
calcSales('sales.csv')
source('~/sales.R')
calcSales('sales.csv')
source('~/sales.R')
calcSales('sales.csv',2)
calcSales('sales.csv',3)
source('~/sales.R')
calcSales('sales.csv',2)
calcSales('sales.csv',3)
?split
source('~/sales.R')
source('~/sales.R')
calcSales('sales.csv',3)
calcSales('sales.csv',2)
4*5*6*7
?multiply
?%*%
?*
?`*`
do.call(*, c(1,2))
do.call(`*`, c(1,2))
source('~/sales.R')
do.call(`*`, c(1,2))
calcSales('sales.csv',2)
calcSales('sales.csv',3)
calcSales('sales.csv',4)
a<-calcSales('sales.csv',4)
transform(a)
?transform
source('~/sales.R')
calcSales('sales.csv',4)
calcSales('sales.csv',3)
rm(list=ls())
source('~/sales.R')
calcSales('sales.csv')
calcSales('sales.csv',4)
source('~/sales.R')
calcSales('sales.csv')
library("swirl")
swirl()
d1 <- Sys.Date()
class(d1)
d1
unclass(d1)
d1
d2<- as.Date("1969-01-01")
class(d2)
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
t2["min"]
t2
t2[["min"]]
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3<- "October 17, 1986 08:24"
t4 < strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units='days')
data(cars)
?cars
head(cars)
play()
dim(data)
dim(cars)
names(cars)
nxt()
plot
plot(cars)
?plot
plot(x=cars["speed"], y= cars["dist"])
plot(x=cars[,"speed"], y= cars[,"dist"])
play()
x[["speed"]]
cars[["speed"]]
plot(x=car$speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist)
nxt()
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$dist, y=cars$speed, xlab="Speed")
plot(y=cars$dist, x=cars$speed, xlab="Speed")
plot(y=cars$dist, x=cars$speed, xlab="Speed" , ylab="Stopping Distance")
plot(y=cars$dist, x=cars$speed, ylab="Stopping Distance")
plot(y=cars$dist, x=cars$speed, xlab="Speed" , ylab="Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, col='red')
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot( formula= mpg ~ cyl, data=mtcars)
play()
head(mtcars)
nxt()
hist(mtcars$mpg)
affinity("sales.csv",2)
source('~/affinity.R')
affinity("sales.csv",2)
d4 <- affinity("sales.csv",2)
sort(d4)
d4[ with(d4, order(-quantity)), ]
source('~/affinity.R')
affinity("sales.csv",2)
affinity("sales.csv",3)
source('~/affinity.R')
affinity("sales.csv",3)
affinity("sales.csv",3)
affinity("sales.csv",3)
affinity("sales.csv",3)
affinity("sales.csv",3)
source('~/affinity.R')
affinity("sales.csv",3)
source('~/affinity.R')
affinity("sales.csv",3)
data <- read.csv("sales.csv", colClasses=c("integer", "character", "integer"))
data
d1 <- aggregate(data$quantity, by=list(data$orderid, data$product), FUN=sum)
d1
names(d1) <- c("orderid","product","quantity")
d1
n<-3
d2<- do.call(rbind.data.frame, lapply(split(data, data["orderid"]), combinations, n=n))
combinations <- function(df,n) {
## Only calculate for orders having n and more products
if( nrow(df) >=n ) {
## Create all the possible n-product group
t1 <- combn(split(df[,2:3], df["product"]),n)
t2 <- do.call(rbind.data.frame,lapply(1:ncol(t1), function(x) {
p <- sapply(1:n, function(y) t1[[y,x]][["product"]] )
c( sort(p), list( prod( sapply(1:n, function(z) t1[[z,x]][["quantity"]]) )))
} ) )
names(t2) <- c(sapply(1:n, function(x) paste("product", x, sep="")), "quantity")
t2
}
else
list()
}
d2<- do.call(rbind.data.frame, lapply(split(data, data["orderid"]), combinations, n=n))
d2<- do.call(rbind.data.frame, lapply(split(d1, d1["orderid"]), combinations, n=n))
source('~/affinity.R')
source('~/affinity.R')
affinity("sales.csv",3)
affinity("sales.csv",4)
affinity("sales.csv",2)
affinity("sales.csv",2)
source('C:/Users/yhuang/git/blog/affinity/workspace/AffinityR/affinity.R')
affinityR("../data/sales.csv", 2)
affinityR("C:/Users/yhuang/git/blog/affinity/workspace/affinity/data/sales.csv", 2)
affinityR("C:/Users/yhuang/git/blog/affinity/workspace/data/sales.csv", 2)
source('C:/Users/yhuang/git/blog/affinity/workspace/AffinityR/affinity.R')
affinityR("C:/Users/yhuang/git/blog/affinity/workspace/data/sales.csv", 2)
source('C:/Users/yhuang/git/blog/affinity/workspace/AffinityR/affinity.R')
affinityR("C:/Users/yhuang/git/blog/affinity/workspace/data/sales.csv", 2)
source('C:/Users/yhuang/git/blog/affinity/workspace/AffinityR/affinity.R')
affinityR("C:/Users/yhuang/git/blog/affinity/workspace/data/sales.csv", 2)
affinityR("C:/Users/yhuang/git/blog/affinity/workspace/data/sales.csv", 3)
q()
help(awk)
t1 <- try(system("who", intern = TRUE))
t1 <- try(system("dir", intern = TRUE))
system("dir")
help9system
help(system)
source('C:/Users/yhuang/git/ExData_Plotting1/plot1.R')
setwd("C:\Users\yhuang\git\ExData_Plotting1")
setwd("C:\\Users\\yhuang\\git\\ExData_Plotting1")
source('C:/Users/yhuang/git/ExData_Plotting1/plot1.R')
source('C:/Users/yhuang/git/ExData_Plotting1/plot1.R')
source('C:/Users/yhuang/git/ExData_Plotting1/plot1.R')
source('C:/Users/yhuang/git/ExData_Plotting1/plot2.R')
source('C:/Users/yhuang/git/ExData_Plotting1/plot2.R')
source('C:/Users/yhuang/git/ExData_Plotting1/plot3.R')
source('C:/Users/yhuang/git/ExData_Plotting1/plot4.R')
